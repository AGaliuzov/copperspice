set(NETWORK_PUBLIC_INCLUDES
    ${NETWORK_PUBLIC_INCLUDES}
    QSsl
    QSslCertificate
    QSslConfiguration
    QSslCipher
    QSslError
    QSslKey
    QSslSocket
    PARENT_SCOPE
)

set(NETWORK_INCLUDES
    ${NETWORK_INCLUDES}
    ${CMAKE_CURRENT_SOURCE_DIR}/qssl.h
    ${CMAKE_CURRENT_SOURCE_DIR}/qsslcertificate.h
    ${CMAKE_CURRENT_SOURCE_DIR}/qsslconfiguration.h
    ${CMAKE_CURRENT_SOURCE_DIR}/qsslcipher.h
    ${CMAKE_CURRENT_SOURCE_DIR}/qsslerror.h
    ${CMAKE_CURRENT_SOURCE_DIR}/qsslkey.h
    ${CMAKE_CURRENT_SOURCE_DIR}/qsslsocket.h
    PARENT_SCOPE
)

set(NETWORK_PRIVATE_INCLUDES
    ${NETWORK_PRIVATE_INCLUDES}
    ${CMAKE_CURRENT_SOURCE_DIR}/qsslcertificate_p.h
    ${CMAKE_CURRENT_SOURCE_DIR}/qsslconfiguration_p.h
    ${CMAKE_CURRENT_SOURCE_DIR}/qsslcipher_p.h
    ${CMAKE_CURRENT_SOURCE_DIR}/qsslkey_p.h
    ${CMAKE_CURRENT_SOURCE_DIR}/qsslsocket_openssl_p.h
    ${CMAKE_CURRENT_SOURCE_DIR}/qsslsocket_openssl_symbols_p.h
    ${CMAKE_CURRENT_SOURCE_DIR}/qsslsocket_p.h
    PARENT_SCOPE
)

if(OPENSSL_FOUND)
    set(NETWORK_SOURCES
        ${NETWORK_SOURCES}
        ${CMAKE_CURRENT_SOURCE_DIR}/qssl.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/qsslcertificate.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/qsslconfiguration.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/qsslcipher.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/qsslerror.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/qsslkey.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/qsslsocket.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/qsslsocket_openssl.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/qsslsocket_openssl_symbols.cpp
        PARENT_SCOPE
    )
endif()